{"version":3,"sources":["services/base-cookie-options.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,qBAAwB,iCAAiC,CAAC,CAAA;AAE1D,qBAAyB,eAAe,CAAC,CAAA;AACzC,4BAAqB,+CAA+C,CAAC,CAAA;AAErE,eAAe;AACf;IAME,uBAAY,EAAkD;YAAjD,cAAI,EAAE,kBAAM,EAAE,oBAAO,EAAE,kBAAM;QACxC,IAAI,CAAC,IAAI,GAAG,gBAAS,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;QAC1C,IAAI,CAAC,MAAM,GAAG,gBAAS,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;QAChD,IAAI,CAAC,OAAO,GAAG,gBAAS,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC;QACnD,IAAI,CAAC,MAAM,GAAG,gBAAS,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,KAAK,CAAC;IACnD,CAAC;IAED,6BAAK,GAAL,UAAM,OAA2B;QAC/B,MAAM,CAAC,IAAI,aAAa,CAAoB;YAC1C,IAAI,EAAE,gBAAS,CAAC,OAAO,CAAC,IAAI,gBAAS,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI;YAC9E,MAAM,EAAE,gBAAS,CAAC,OAAO,CAAC,IAAI,gBAAS,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;YACtF,OAAO,EAAE,gBAAS,CAAC,OAAO,CAAC,IAAI,gBAAS,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO;YAC1F,MAAM,EAAE,gBAAS,CAAC,OAAO,CAAC,IAAI,gBAAS,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;SACvF,CAAC,CAAC;IACL,CAAC;IACH,oBAAC;AAAD,CArBA,AAqBC,IAAA;AArBY,qBAAa,gBAqBzB,CAAA;AAED,eAAe;AAEf;IAAuC,qCAAa;IAClD;QAAgB,kBAAyB,EAAC,IAAI,EAAE,oBAAM,EAAE,CAAC,WAAW,EAAE,EAAC,CAAC,CAAC;IAAC,CAAC;IAF7E;QAAC,iBAAU,EAAE;;yBAAA;IAGb,wBAAC;AAAD,CAFA,AAEC,CAFsC,aAAa,GAEnD;AAFY,yBAAiB,oBAE7B,CAAA","file":"services/base-cookie-options.js","sourcesContent":["import {isPresent} from '@angular/common/src/facade/lang';\r\nimport {CookieOptionsArgs} from './cookie-options-args.model';\r\nimport {Injectable} from '@angular/core';\r\nimport {getDOM} from '@angular/platform-browser/src/dom/dom_adapter';\r\n\r\n/** @private */\r\nexport class CookieOptions {\r\n  path: string;\r\n  domain: string;\r\n  expires: string | Date;\r\n  secure: boolean;\r\n\r\n  constructor({path, domain, expires, secure}: CookieOptionsArgs) {\r\n    this.path = isPresent(path) ? path : null;\r\n    this.domain = isPresent(domain) ? domain : null;\r\n    this.expires = isPresent(expires) ? expires : null;\r\n    this.secure = isPresent(secure) ? secure : false;\r\n  }\r\n\r\n  merge(options?: CookieOptionsArgs): CookieOptions {\r\n    return new CookieOptions(<CookieOptionsArgs>{\r\n      path: isPresent(options) && isPresent(options.path) ? options.path : this.path,\r\n      domain: isPresent(options) && isPresent(options.domain) ? options.domain : this.domain,\r\n      expires: isPresent(options) && isPresent(options.expires) ? options.expires : this.expires,\r\n      secure: isPresent(options) && isPresent(options.secure) ? options.secure : this.secure,\r\n    });\r\n  }\r\n}\r\n\r\n/** @private */\r\n@Injectable()\r\nexport class BaseCookieOptions extends CookieOptions {\r\n  constructor() { super(<CookieOptionsArgs>{path: getDOM().getBaseHref()}); }\r\n}\r\n"],"sourceRoot":"/source/"}